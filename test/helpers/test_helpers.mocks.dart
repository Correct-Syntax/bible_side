// Mocks generated by Mockito 5.4.5 from annotations
// in bible_side/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:bible_side/common/enums.dart' as _i8;
import 'package:bible_side/services/app_info_service.dart' as _i10;
import 'package:bible_side/services/bibles_service.dart' as _i7;
import 'package:bible_side/services/json_service.dart' as _i12;
import 'package:bible_side/services/reader_service.dart' as _i11;
import 'package:bible_side/services/search_service.dart' as _i13;
import 'package:bible_side/services/settings_service.dart' as _i9;
import 'package:flutter/material.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:stacked_services/stacked_services.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i2.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i4.GlobalKey<_i4.NavigatorState>? nestedNavigationKey(int? index) => (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i4.GlobalKey<_i4.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i2.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<T?>? navigateWithTransition<T>(
    _i4.Widget? page, {
    bool? opaque,
    String? transition = '',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i4.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i2.Transition? transitionClass,
    _i2.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  _i5.Future<T?>? replaceWithTransition<T>(
    _i4.Widget? page, {
    bool? opaque,
    String? transition = '',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i4.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i2.Transition? transitionClass,
    _i2.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void popUntil(
    _i4.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i4.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  _i5.Future<T?>? navigateToView<T>(
    _i4.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i4.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i2.Transition? transition,
    _i2.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  _i5.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i4.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  _i5.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  _i5.Future<T?>? clearStackAndShowView<T>(
    _i4.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  _i5.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  _i5.Future<T?>? clearTillFirstAndShowView<T>(
    _i4.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);

  @override
  _i5.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i4.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock implements _i2.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i2.SheetBuilder>? builders) => super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = 'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
    double? elevation = 1.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
            #elevation: elevation,
          },
        ),
        returnValue: _i5.Future<_i2.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub: _i5.Future<_i2.SheetResponse<dynamic>?>.value(),
      ) as _i5.Future<_i2.SheetResponse<dynamic>?>);

  @override
  _i5.Future<_i2.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i6.Color? barrierColor = const _i6.Color(2315255808),
    double? elevation = 1.0,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = '',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #elevation: elevation,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i5.Future<_i2.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i5.Future<_i2.SheetResponse<T>?>.value(),
      ) as _i5.Future<_i2.SheetResponse<T>?>);

  @override
  void completeSheet(_i2.SheetResponse<dynamic>? response) => super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i2.DialogService {
  @override
  void registerCustomDialogBuilders(Map<dynamic, _i2.DialogBuilder>? builders) => super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i4.Widget Function(
      _i4.BuildContext,
      _i2.DialogRequest<dynamic>,
      dynamic Function(_i2.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i6.Color? cancelTitleColor,
    String? buttonTitle = 'Ok',
    _i6.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i4.RouteSettings? routeSettings,
    _i4.GlobalKey<_i4.NavigatorState>? navigatorKey,
    _i2.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #routeSettings: routeSettings,
            #navigatorKey: navigatorKey,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i5.Future<_i2.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub: _i5.Future<_i2.DialogResponse<dynamic>?>.value(),
      ) as _i5.Future<_i2.DialogResponse<dynamic>?>);

  @override
  _i5.Future<_i2.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i6.Color? barrierColor = const _i6.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = '',
    bool? useSafeArea = true,
    _i4.RouteSettings? routeSettings,
    _i4.GlobalKey<_i4.NavigatorState>? navigatorKey,
    _i4.RouteTransitionsBuilder? transitionBuilder,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #routeSettings: routeSettings,
            #navigatorKey: navigatorKey,
            #transitionBuilder: transitionBuilder,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i2.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i5.Future<_i2.DialogResponse<T>?>.value(),
      ) as _i5.Future<_i2.DialogResponse<T>?>);

  @override
  _i5.Future<_i2.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = 'Cancel',
    _i6.Color? cancelTitleColor,
    String? confirmationTitle = 'Ok',
    _i6.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i4.RouteSettings? routeSettings,
    _i2.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #routeSettings: routeSettings,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i5.Future<_i2.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub: _i5.Future<_i2.DialogResponse<dynamic>?>.value(),
      ) as _i5.Future<_i2.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i2.DialogResponse<dynamic>? response) => super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BiblesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiblesService extends _i1.Mock implements _i7.BiblesService {
  @override
  Map<String, dynamic> get primaryAreaJson => (super.noSuchMethod(
        Invocation.getter(#primaryAreaJson),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  set primaryAreaJson(Map<String, dynamic>? _primaryAreaJson) => super.noSuchMethod(
        Invocation.setter(
          #primaryAreaJson,
          _primaryAreaJson,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> get secondaryAreaJson => (super.noSuchMethod(
        Invocation.getter(#secondaryAreaJson),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  set secondaryAreaJson(Map<String, dynamic>? _secondaryAreaJson) => super.noSuchMethod(
        Invocation.setter(
          #secondaryAreaJson,
          _secondaryAreaJson,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get primaryBible => (super.noSuchMethod(
        Invocation.getter(#primaryBible),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#primaryBible),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#primaryBible),
        ),
      ) as String);

  @override
  String get secondaryBible => (super.noSuchMethod(
        Invocation.getter(#secondaryBible),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#secondaryBible),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#secondaryBible),
        ),
      ) as String);

  @override
  String get bookCode => (super.noSuchMethod(
        Invocation.getter(#bookCode),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#bookCode),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#bookCode),
        ),
      ) as String);

  @override
  int get chapterNumber => (super.noSuchMethod(
        Invocation.getter(#chapterNumber),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get verseNumber => (super.noSuchMethod(
        Invocation.getter(#verseNumber),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  List<String> get recentBooks => (super.noSuchMethod(
        Invocation.getter(#recentBooks),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  _i8.ViewBy get viewBy => (super.noSuchMethod(
        Invocation.getter(#viewBy),
        returnValue: _i8.ViewBy.chapter,
        returnValueForMissingStub: _i8.ViewBy.chapter,
      ) as _i8.ViewBy);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i5.Future<void> initilize() => (super.noSuchMethod(
        Invocation.method(
          #initilize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> reloadBiblesJson() => (super.noSuchMethod(
        Invocation.method(
          #reloadBiblesJson,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void setPrimaryAreaBible(String? bibleCode) => super.noSuchMethod(
        Invocation.method(
          #setPrimaryAreaBible,
          [bibleCode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSecondaryAreaBible(String? bibleCode) => super.noSuchMethod(
        Invocation.method(
          #setSecondaryAreaBible,
          [bibleCode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBook(String? book) => super.noSuchMethod(
        Invocation.method(
          #setBook,
          [book],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setChapter(int? newChapter) => super.noSuchMethod(
        Invocation.method(
          #setChapter,
          [newChapter],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setVerse(int? newVerse) => super.noSuchMethod(
        Invocation.method(
          #setVerse,
          [newVerse],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewBy(_i8.ViewBy? viewBy) => super.noSuchMethod(
        Invocation.method(
          #setViewBy,
          [viewBy],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> loadBibleVersion(_i8.Area? pane) => (super.noSuchMethod(
        Invocation.method(
          #loadBibleVersion,
          [pane],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void revertToKJVIfOETBookNotAvailable(
    String? thebibleCode,
    String? theBookCode,
    _i8.Area? area,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #revertToKJVIfOETBookNotAvailable,
          [
            thebibleCode,
            theBookCode,
            area,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addBookToRecentHistory(String? book) => super.noSuchMethod(
        Invocation.method(
          #addBookToRecentHistory,
          [book],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isBibleOET(String? bible) => (super.noSuchMethod(
        Invocation.method(
          #isBibleOET,
          [bible],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isReaderBibleOET(_i8.Area? readerArea) => (super.noSuchMethod(
        Invocation.method(
          #isReaderBibleOET,
          [readerArea],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) => super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsService extends _i1.Mock implements _i9.SettingsService {
  @override
  bool get showSecondaryArea => (super.noSuchMethod(
        Invocation.getter(#showSecondaryArea),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get primaryBible => (super.noSuchMethod(
        Invocation.getter(#primaryBible),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#primaryBible),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#primaryBible),
        ),
      ) as String);

  @override
  String get secondaryBible => (super.noSuchMethod(
        Invocation.getter(#secondaryBible),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#secondaryBible),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#secondaryBible),
        ),
      ) as String);

  @override
  String get bookCode => (super.noSuchMethod(
        Invocation.getter(#bookCode),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#bookCode),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#bookCode),
        ),
      ) as String);

  @override
  int get chapterNumber => (super.noSuchMethod(
        Invocation.getter(#chapterNumber),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get verseNumber => (super.noSuchMethod(
        Invocation.getter(#verseNumber),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  List<String> get recentBooks => (super.noSuchMethod(
        Invocation.getter(#recentBooks),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  _i8.ViewBy get viewBy => (super.noSuchMethod(
        Invocation.getter(#viewBy),
        returnValue: _i8.ViewBy.chapter,
        returnValueForMissingStub: _i8.ViewBy.chapter,
      ) as _i8.ViewBy);

  @override
  List<String> get bookmarks => (super.noSuchMethod(
        Invocation.getter(#bookmarks),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  double get textScaling => (super.noSuchMethod(
        Invocation.getter(#textScaling),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  bool get showMarks => (super.noSuchMethod(
        Invocation.getter(#showMarks),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get showChaptersAndVerses => (super.noSuchMethod(
        Invocation.getter(#showChaptersAndVerses),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get linkReaderAreaScrolling => (super.noSuchMethod(
        Invocation.getter(#linkReaderAreaScrolling),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i5.Future<void> initilize() => (super.noSuchMethod(
        Invocation.method(
          #initilize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setShowSecondaryArea(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setShowSecondaryArea,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getShowSecondaryArea() => (super.noSuchMethod(
        Invocation.method(
          #getShowSecondaryArea,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> setPrimaryAreaBible(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setPrimaryAreaBible,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> getPrimaryAreaBible() => (super.noSuchMethod(
        Invocation.method(
          #getPrimaryAreaBible,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getPrimaryAreaBible,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getPrimaryAreaBible,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> setSecondaryAreaBible(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setSecondaryAreaBible,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> getSecondaryAreaBible() => (super.noSuchMethod(
        Invocation.method(
          #getSecondaryAreaBible,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getSecondaryAreaBible,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getSecondaryAreaBible,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> setBook(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setBook,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> getBook() => (super.noSuchMethod(
        Invocation.method(
          #getBook,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getBook,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getBook,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> setChapterNumber(int? value) => (super.noSuchMethod(
        Invocation.method(
          #setChapterNumber,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> getChapterNumber() => (super.noSuchMethod(
        Invocation.method(
          #getChapterNumber,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> setVerseNumber(int? value) => (super.noSuchMethod(
        Invocation.method(
          #setVerseNumber,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> getVerseNumber() => (super.noSuchMethod(
        Invocation.method(
          #getVerseNumber,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> setNavRecentBooks(List<String>? value) => (super.noSuchMethod(
        Invocation.method(
          #setNavRecentBooks,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<String>> getNavRecentBooks() => (super.noSuchMethod(
        Invocation.method(
          #getNavRecentBooks,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<void> setNavViewBy(_i8.ViewBy? value) => (super.noSuchMethod(
        Invocation.method(
          #setNavViewBy,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i8.ViewBy> getNavViewBy() => (super.noSuchMethod(
        Invocation.method(
          #getNavViewBy,
          [],
        ),
        returnValue: _i5.Future<_i8.ViewBy>.value(_i8.ViewBy.chapter),
        returnValueForMissingStub: _i5.Future<_i8.ViewBy>.value(_i8.ViewBy.chapter),
      ) as _i5.Future<_i8.ViewBy>);

  @override
  _i5.Future<void> setBookmarks(List<String>? value) => (super.noSuchMethod(
        Invocation.method(
          #setBookmarks,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<String>> getBookmarks() => (super.noSuchMethod(
        Invocation.method(
          #getBookmarks,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<void> setTextScaling(double? value) => (super.noSuchMethod(
        Invocation.method(
          #setTextScaling,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<double> getTextScaling() => (super.noSuchMethod(
        Invocation.method(
          #getTextScaling,
          [],
        ),
        returnValue: _i5.Future<double>.value(0.0),
        returnValueForMissingStub: _i5.Future<double>.value(0.0),
      ) as _i5.Future<double>);

  @override
  _i5.Future<void> setShowMarks(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setShowMarks,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getShowMarks() => (super.noSuchMethod(
        Invocation.method(
          #getShowMarks,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> setShowChaptersAndVerses(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setShowChaptersAndVerses,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getShowChaptersAndVerses() => (super.noSuchMethod(
        Invocation.method(
          #getShowChaptersAndVerses,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> setLinkReaderAreaScrolling(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setLinkReaderAreaScrolling,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getLinkReaderAreaScrolling() => (super.noSuchMethod(
        Invocation.method(
          #getLinkReaderAreaScrolling,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) => super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppInfoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppInfoService extends _i1.Mock implements _i10.AppInfoService {
  @override
  _i5.Future<String> getAppVersion() => (super.noSuchMethod(
        Invocation.method(
          #getAppVersion,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getAppVersion,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getAppVersion,
            [],
          ),
        )),
      ) as _i5.Future<String>);
}

/// A class which mocks [ReaderService].
///
/// See the documentation for Mockito's code generation for more information.
class MockReaderService extends _i1.Mock implements _i11.ReaderService {
  @override
  Map<String, dynamic> get primaryAreaJson => (super.noSuchMethod(
        Invocation.getter(#primaryAreaJson),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> get secondaryAreaJson => (super.noSuchMethod(
        Invocation.getter(#secondaryAreaJson),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i5.Future<String> getReaderBookHTML(
    _i8.Area? area,
    _i8.ViewBy? viewBy,
    String? bibleCode,
    String? bookCode,
    List<String>? bookmarks,
    bool? showMarks,
    bool? showChaptersAndVerses,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReaderBookHTML,
          [
            area,
            viewBy,
            bibleCode,
            bookCode,
            bookmarks,
            showMarks,
            showChaptersAndVerses,
          ],
        ),
        returnValue: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getReaderBookHTML,
            [
              area,
              viewBy,
              bibleCode,
              bookCode,
              bookmarks,
              showMarks,
              showChaptersAndVerses,
            ],
          ),
        )),
        returnValueForMissingStub: _i5.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getReaderBookHTML,
            [
              area,
              viewBy,
              bibleCode,
              bookCode,
              bookmarks,
              showMarks,
              showChaptersAndVerses,
            ],
          ),
        )),
      ) as _i5.Future<String>);
}

/// A class which mocks [JsonService].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonService extends _i1.Mock implements _i12.JsonService {
  @override
  _i5.Future<Map<String, dynamic>> loadBookJson(
    String? bibleCode,
    String? bookCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadBookJson,
          [
            bibleCode,
            bookCode,
          ],
        ),
        returnValue: _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub: _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> loadJsonFromAssets(String? path) => (super.noSuchMethod(
        Invocation.method(
          #loadJsonFromAssets,
          [path],
        ),
        returnValue: _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub: _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);
}

/// A class which mocks [SearchService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchService extends _i1.Mock implements _i13.SearchService {
  @override
  List<Map<String, dynamic>> get searchResults => (super.noSuchMethod(
        Invocation.getter(#searchResults),
        returnValue: <Map<String, dynamic>>[],
        returnValueForMissingStub: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);

  @override
  void setSearchSectionFilter(String? item) => super.noSuchMethod(
        Invocation.method(
          #setSearchSectionFilter,
          [item],
        ),
        returnValueForMissingStub: null,
      );
}
